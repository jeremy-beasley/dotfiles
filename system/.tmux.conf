###########################
# Keybinding Shortcuts    
###########################

# Use C-s (control + s) as the prefix key
unbind C-b
set -g prefix C-s

# Set shortcut to reload tmux conf file 
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# Create pane-switching shortcuts based on 'vim' movement keys; bind without `tmux` prefix 
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Split window shortcuts 
bind -N "split horizontal" | split-window -h  -c "#{pane_current_path}" 
bind -N "split vertical" - split-window -v -c "#{pane_current_path}" 
unbind '"'
unbind %

# Coarse adjustment (5 or 10 cursor cells per bump)
# bind -n C-Left resize-pane -L 10
# bind -n C-Right resize-pane -R 10
# bind -n C-Down resize-pane -D 5
# bind -n C-Up resize-pane -U 5

# Coarse / Fine adjustment (1 or 2 cursor cells per bump)
# bind -n S-Left resize-pane -L 2
# bind -n S-Right resize-pane -R 2
# bind -n S-Down resize-pane -D 1
# bind -n S-Up resize-pane -U 1

bind -n S-Left resize-pane -L 10
bind -n S-Right resize-pane -R 10
bind -n S-Down resize-pane -D 5
bind -n S-Up resize-pane -U 5

# Remap window shortcuts
bind c new-window -c "#{pane_current_path}" 

# Break pane to new window and retain focus on current window 
bind-key b break-pane -d

# For swapping sessions with interactive command 
# bind-key C-j choose-tree
bind-key C-j choose-session

# Setup 'v' to begin selection as in Vim
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind -T copy-mode-vi Enter send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Binding to break out of existing session with a new session
bind C-b send-keys "tat && exit" "C-m"

# Binding to kill sessions and to resume whatever session is next highest in the stack
bind K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'

# Bind ']' to use pbpaste
bind ] run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"


###########################
# Plugins 
###########################

# tmux plugin manager
set -g @plugin 'tmux-plugins/tpm'

# Sensible tmux settings 
set -g @plugin 'tmux-plugins/tmux-sensible'

# Persists tmux environment across system restarts. Set to save continuously. 
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-restore 'on'

###########################
# Configuration Options   
###########################

# Set options
set -g default-terminal "screen-256color"

# Enable mouse scrolling
# set -g mode-mouse on

# Customize the tmux status pane
set-option -g status on
set-option -g status-position top
set -g status-justify centre

# set-option -g status-bg colour235 #base02
# set-option -g status-fg yellow #yellow
# set-option -g status-attr dim

set -g status-left-length 50
set -g status-right-length 100 
set -g status-right "@#H %a %Y.%m.%d %H:%M"

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Set pane colors - hilight the active pane
set -g pane-border-style fg=colour8 
set -g pane-active-border-style fg=colour3 

# Set tmux to use the system clipboard 
# set-option -g default-command "reattach-to-user-namespace -l bash"

# Renumber windows as we open and close
set -g renumber-windows on

# Aggressively redraw the scren
set-window-option -g aggressive-resize

# Change escape delay time so vim switches modes more quickly 
set -sg escape-time 0


###########################
# Initializaiton
###########################


# Automatic tpm installation - https://github.com/tmux-plugins/tpm/blob/master/docs/automatic_tpm_installation.md
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
